package se.sundsvall.collaborationroom.modules.filearchive.beans;

import java.lang.reflect.Field;
import java.util.List;

import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.xml.GeneratedElementable;
import se.unlogic.standardutils.xml.XMLElement;

@Table(name = "communitybase_file_archive_categories")
@XMLElement
public class Category extends GeneratedElementable implements Comparable<Category> {

	public static final Field FILES_RELATION = ReflectionUtils.getField(Category.class, "files");

	@Key
	@DAOManaged(autoGenerated = true)
	@XMLElement
	private Integer categoryID;

	@DAOManaged
	@XMLElement
	private Integer sectionID;

	@WebPopulate(required = true, maxLength = 255)
	@DAOManaged
	@XMLElement
	private String name;

	@DAOManaged
	@XMLElement
	private boolean autoGenerated;

	@DAOManaged
	@OneToMany
	@XMLElement
	private List<File> files;

	public Integer getCategoryID() {

		return categoryID;
	}

	public void setCategoryID(Integer categoryID) {

		this.categoryID = categoryID;
	}

	public Integer getSectionID() {

		return sectionID;
	}

	public void setSectionID(Integer sectionID) {

		this.sectionID = sectionID;
	}

	public String getName() {

		return name;
	}

	public void setName(String name) {

		this.name = name;
	}

	public boolean isAutoGenerated() {

		return autoGenerated;
	}

	public void setAutoGenerated(boolean autoGenerated) {

		this.autoGenerated = autoGenerated;
	}

	public List<File> getFiles() {

		return files;
	}

	public void setFiles(List<File> files) {

		this.files = files;
	}

	@Override
	public String toString() {

		return name + " (ID: " + categoryID + ")";
	}

	@Override
	public int compareTo(Category other) {

		return name.toLowerCase().compareTo(other.getName().toLowerCase());
	}

	@Override
	public int hashCode() {

		final int prime = 31;
		int result = 1;
		result = prime * result + ((categoryID == null) ? 0 : categoryID.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {

		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Category other = (Category) obj;
		if (categoryID == null) {
			if (other.categoryID != null)
				return false;
		} else if (!categoryID.equals(other.categoryID))
			return false;
		return true;
	}

}
