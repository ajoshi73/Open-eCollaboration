package se.sundsvall.collaborationroom.modules.task.beans;

import java.lang.reflect.Field;
import java.util.List;

import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.OneToMany;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.string.StringUtils;
import se.unlogic.standardutils.xml.XMLElement;

@Table(name = "communitybase_task_tasklists")
@XMLElement
public class TaskList extends TaskPostedBean implements Comparable<TaskList> {

	public static final String TASKLIST_TABLE_NAME = "communitybase_task_tasklists";
	public static final Field TASKS_RELATION = ReflectionUtils.getField(TaskList.class, "tasks");

	@Key
	@DAOManaged(autoGenerated = true)
	@XMLElement
	private Integer taskListID;

	@DAOManaged
	@XMLElement
	private Integer sectionID;

	@DAOManaged
	@WebPopulate(required = true, maxLength = 255)
	@XMLElement
	private String name;

	@DAOManaged
	@OneToMany
	@XMLElement
	private List<Task> tasks;

	public Integer getTaskListID() {

		return taskListID;
	}

	public void setTaskListID(Integer taskListID) {

		this.taskListID = taskListID;
	}

	public Integer getSectionID() {

		return sectionID;
	}

	public void setSectionID(Integer sectionID) {

		this.sectionID = sectionID;
	}

	public String getName() {

		return name;
	}

	public void setName(String name) {

		this.name = name;
	}

	public List<Task> getTasks() {

		return tasks;
	}

	public void setTasks(List<Task> tasks) {

		this.tasks = tasks;
	}

	@Override
	public int compareTo(TaskList other) {

		return name.toLowerCase().compareTo(other.getName().toLowerCase());
	}

	@Override
	public int hashCode() {

		final int prime = 31;
		int result = 1;
		result = prime * result + ((taskListID == null) ? 0 : taskListID.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {

		if (this == obj){
			return true;
		}
		if (obj == null){
			return false;
		}
		if (getClass() != obj.getClass()){
			return false;
		}
		TaskList other = (TaskList) obj;
		if (taskListID == null) {
			if (other.taskListID != null){
				return false;
			}
		} else if (!taskListID.equals(other.taskListID)){
			return false;
		}
		return true;
	}

	@Override
	public String toString(){

		return StringUtils.toLogFormat(name, 30) + " (taskListID: " + taskListID + ")";
	}
}
