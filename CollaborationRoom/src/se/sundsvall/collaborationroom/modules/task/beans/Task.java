package se.sundsvall.collaborationroom.modules.task.beans;

import java.lang.reflect.Field;
import java.sql.Date;
import java.sql.Timestamp;

import se.unlogic.hierarchy.core.beans.User;
import se.unlogic.standardutils.annotations.WebPopulate;
import se.unlogic.standardutils.dao.annotations.DAOManaged;
import se.unlogic.standardutils.dao.annotations.Key;
import se.unlogic.standardutils.dao.annotations.ManyToOne;
import se.unlogic.standardutils.dao.annotations.OrderBy;
import se.unlogic.standardutils.dao.annotations.Table;
import se.unlogic.standardutils.populators.DatePopulator;
import se.unlogic.standardutils.reflection.ReflectionUtils;
import se.unlogic.standardutils.string.StringUtils;
import se.unlogic.standardutils.xml.XMLElement;

@Table(name = "communitybase_task_tasks")
@XMLElement
public class Task extends TaskPostedBean implements Comparable<Task> {

	public static Field TASKLIST_RELATION = ReflectionUtils.getField(Task.class, "taskList");

	@Key
	@DAOManaged(autoGenerated = true)
	@XMLElement
	private Integer taskID;

	@DAOManaged
	@WebPopulate(required = true, maxLength = 255)
	@XMLElement
	private String title;

	@DAOManaged
	@WebPopulate(maxLength = 65536)
	@XMLElement
	private String description;

	@DAOManaged
	@OrderBy
	@XMLElement
	private Integer sortIndex;

	@DAOManaged
	@XMLElement(name = "responsibleUser")
	private User responsibleUser;

	@DAOManaged
	@WebPopulate(populator = DatePopulator.class)
	@XMLElement
	private Date deadline;

	@DAOManaged
	@XMLElement
	private Timestamp finished;

	@DAOManaged(dontUpdateIfNull = true)
	@XMLElement(name = "finishedByUser")
	private User finishedByUser;

	@DAOManaged(columnName = "taskListID")
	@ManyToOne
	@XMLElement
	private TaskList taskList;

	@XMLElement
	private String moduleAlias;

	@XMLElement
	private String sectionName;

	private Integer taskListID;

	public Integer getTaskID() {

		return taskID;
	}

	public void setTaskID(Integer taskID) {

		this.taskID = taskID;
	}

	public String getTitle() {

		return title;
	}

	public void setTitle(String title) {

		this.title = title;
	}

	public String getDescription() {

		return description;
	}

	public void setDescription(String description) {

		this.description = description;
	}

	public Integer getSortIndex() {

		return sortIndex;
	}

	public void setSortIndex(Integer sortIndex) {

		this.sortIndex = sortIndex;
	}

	public User getResponsibleUser() {

		return responsibleUser;
	}

	public void setResponsibleUser(User responsibleUser) {

		this.responsibleUser = responsibleUser;
	}

	public Date getDeadline() {

		return deadline;
	}

	public void setDeadline(Date deadline) {

		this.deadline = deadline;
	}

	public Timestamp getFinished() {

		return finished;
	}

	public void setFinished(Timestamp finished) {

		this.finished = finished;
	}

	public User getFinishedByUser() {

		return finishedByUser;
	}

	public void setFinishedByUser(User finishedByUser) {

		this.finishedByUser = finishedByUser;
	}

	public TaskList getTaskList() {

		return taskList;
	}

	public void setTaskList(TaskList taskList) {

		this.taskList = taskList;
	}

	public String getModuleAlias() {

		return moduleAlias;
	}

	public void setModuleAlias(String moduleAlias) {

		this.moduleAlias = moduleAlias;
	}

	public String getSectionName() {

		return sectionName;
	}

	public void setSectionName(String sectionName) {

		this.sectionName = sectionName;
	}

	@Override
	public int compareTo(Task other) {

		Integer otherSortIndex = other.getSortIndex();

		if (sortIndex == null ^ otherSortIndex == null) {

			return (sortIndex == null) ? -1 : 1;
		}

		if (sortIndex == null && otherSortIndex == null) {

			return 0;
		}

		return sortIndex.compareTo(other.getSortIndex());
	}

	@Override
	public String toString() {

		return StringUtils.toLogFormat(title, 30) + " (taskID: " + taskID + ")";
	}

	@Override
	public int hashCode() {

		final int prime = 31;
		int result = 1;
		result = prime * result + ((taskID == null) ? 0 : taskID.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {

		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Task other = (Task) obj;
		if (taskID == null) {
			if (other.taskID != null) {
				return false;
			}
		} else if (!taskID.equals(other.taskID)) {
			return false;
		}
		return true;
	}

	public Integer getTaskListID() {

		if (this.taskList != null) {

			return taskList.getTaskListID();
		}

		return taskListID;
	}

	public void setTaskListID(Integer taskListID) {

		this.taskListID = taskListID;
	}

}
