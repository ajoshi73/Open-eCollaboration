var progress_intervals = [];

+ function($) {

    'use strict';

    $(document).ready(function() {

        var elements = Modernizr.progressbar ? 'progress.of-progress' : 'div.of-progress';

        $(elements).not('[data-of-indicators]').each(function() {
            $(this).ofAnimate(Modernizr.progressbar);
        });

    });

    $.fn.ofAddProgress = function(options) {

        var defaults = {
            value: 0,
            maxValue: 100,
            indicators: false,
            callback: false,
            inside: false,
            before: false
        };

        options = $.extend({}, defaults, options);

        var parent = $(this),
            el = $('<progress class="of-progress" max="100" value="' + options.value + '"><div class="of-progress"><span style="width: ' + options.value + '%;"></span></div></progress>');

        if (options.indicators === true) {
            el.data('of-indicators', true);
            el.find('div').data('of-indicators', true);
        }

        if (options.inside === true && options.before === true) {
            el.prependTo(parent);
        } else if (options.inside === true && options.before === false) {
            el.appendTo(parent);
        } else if (options.inside === false && options.before === true) {
            el.insertBefore(parent);
        } else if (options.inside === false && options.before === false) {
            el.insertAfter(parent);
        } else {
            return false;
        }

        el.ofAnimate(Modernizr.progressbar, options.callback);

    }

    $.fn.ofAnimate = function(isSupported, callback) {

        isSupported = typeof isSupported !== 'undefined' ? isSupported : false;
        callback = typeof callback !== 'undefined' ? callback : false;

        var el = $(this),
            val = isSupported ? el.val() : parseInt(el.find('span').css('width')),
            index = progress_intervals.push(setInterval(updateBar, 1));

        function updateBar() {

            if (val > 100) {

                setTimeout(function() {
                    el.addClass('of-complete');

                    setTimeout(function() {
                        if (callback !== false)
                            callback();

                        el.remove();

                    }, 250);
                }, 500);

                clearInterval(progress_intervals[index - 1]);
                return;
            }

            if (typeof el.data('of-indicators') !== 'undefined') {
                el.toggleClass('of-status-bad', (val >= 0 && val < 33));
                el.toggleClass('of-status-poor', (val >= 33 && val < 66));
                el.toggleClass('of-status-good', (val >= 66 && val <= 100));
            }


            if (isSupported !== false) {
                el.val(val++);
            } else {
                el.find('span').css('width', (val++) + '%');
            }

        }
    }
}(jQuery);